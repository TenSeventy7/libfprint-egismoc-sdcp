/*
 * Secure Device Connection Protocol support unit tests
 * Copyright (C) 2025 Joshua Grisham <josh@joshuagrisham.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 */

#include <glib.h>

#include "fpi-device.h"
#include "fpi-sdcp-device-private.h"

G_BEGIN_DECLS

#define FPI_TYPE_TEST_SDCP_DEVICE (fpi_test_sdcp_device_get_type ())
G_DECLARE_FINAL_TYPE (FpiTestSdcpDevice, fpi_test_sdcp_device, FPI, TEST_SDCP_DEVICE, FpiSdcpDevice)

struct _FpiTestSdcpDevice
{
  FpiSdcpDevice parent;
};

G_END_DECLS

/* host keys */

static const guchar TEST_HOST_PRIVATE_KEY[] = {
  0x84, 0x00, 0xED, 0x14, 0x57, 0x9C, 0xDF, 0x11, 0x58, 0x64, 0x77, 0xE8, 0x36, 0xE8, 0xCB, 0x52, 0x70, 0x84, 0x41, 0xC1, 0xC2, 0xA4, 0x47, 0xC2, 0x18, 0xC5, 0xBB, 0xC2, 0xD1, 0x18, 0xFB, 0xC7
};

static const guchar TEST_HOST_PUBLIC_KEY[] = {
  0x04, 0x52, 0xF0, 0x56, 0xFF, 0xB9, 0xC6, 0x72, 0x86, 0x54, 0x77, 0x1A, 0x36, 0x29, 0xB7, 0x70, 0x76, 0x7B, 0x19, 0xA2, 0x10, 0x6A, 0x49, 0x16, 0xFB, 0x81, 0xBA, 0x06, 0xEF, 0x67, 0x97, 0xC4, 0xA3, 0xDF, 0x67, 0x2A, 0xDE, 0x0E, 0x91, 0x16, 0xD1, 0xAB, 0xE2, 0x78, 0xA8, 0x22, 0x3A, 0xBD, 0xE4, 0x95, 0x8D, 0x62, 0xD4, 0xFF, 0x68, 0x82, 0x15, 0x9F, 0x06, 0x17, 0xC6, 0xF8, 0xCE, 0x10, 0xBF
};

static const guchar TEST_HOST_RANDOM[] = {
  0xD8, 0x77, 0x40, 0x3A, 0xBE, 0x82, 0xF4, 0xD9, 0x7E, 0x14, 0x48, 0xC5, 0x05, 0x2D, 0x83, 0xA5, 0x32, 0xA4, 0x5E, 0x56, 0xEF, 0x04, 0x9C, 0xBB, 0xF9, 0x81, 0x13, 0x75, 0x20, 0xE7, 0x13, 0xBF
};

/* device keys */

static const guchar TEST_DEVICE_RANDOM[] = {
  0x6E, 0x2F, 0x6C, 0x1A, 0xBE, 0xF2, 0xA1, 0x97, 0x3F, 0xB1, 0x31, 0x5A, 0x17, 0xE2, 0x09, 0xFD, 0xB0, 0xC7, 0x85, 0x20, 0xF1, 0xFD, 0x6A, 0x85, 0xD2, 0x94, 0xD7, 0xAE, 0xB4, 0x0A, 0x04, 0xA7
};

static const guchar TEST_R_H_R_D[] = {
  0xD8, 0x77, 0x40, 0x3A, 0xBE, 0x82, 0xF4, 0xD9, 0x7E, 0x14, 0x48, 0xC5, 0x05, 0x2D, 0x83, 0xA5, 0x32, 0xA4, 0x5E, 0x56, 0xEF, 0x04, 0x9C, 0xBB, 0xF9, 0x81, 0x13, 0x75, 0x20, 0xE7, 0x13, 0xBF,
  0x6E, 0x2F, 0x6C, 0x1A, 0xBE, 0xF2, 0xA1, 0x97, 0x3F, 0xB1, 0x31, 0x5A, 0x17, 0xE2, 0x09, 0xFD, 0xB0, 0xC7, 0x85, 0x20, 0xF1, 0xFD, 0x6A, 0x85, 0xD2, 0x94, 0xD7, 0xAE, 0xB4, 0x0A, 0x04, 0xA7
};

static const guchar TEST_DEVICE_PUBLIC_KEY[] = {
  0x04, 0xE2, 0x78, 0x78, 0x90, 0xA6, 0x84, 0xF9, 0x5B, 0x96, 0xB9, 0xA2, 0x31, 0x6C, 0xA8, 0xD3, 0xD3, 0x3D, 0x4D, 0x79, 0xFF, 0x4C, 0x89, 0xDC, 0x6F, 0x9E, 0x88, 0x8E, 0x97, 0x39, 0x90, 0xD1, 0xD3, 0x15, 0x41, 0x33, 0xDC, 0xC8, 0xBD, 0x33, 0xB9, 0x9A, 0xF9, 0xDB, 0xF0, 0x67, 0x33, 0x90, 0xD4, 0x04, 0xD0, 0x92, 0x49, 0x8A, 0x3F, 0x21, 0x4C, 0xD9, 0x3F, 0x9B, 0x9F, 0x28, 0xFB, 0x5F, 0x66
};

static const guchar TEST_DEVICE_FIRMWARE_PUBLIC_KEY[] = {
  0x04, 0xF0, 0x6A, 0x84, 0xAB, 0x51, 0xA3, 0xA6, 0xE8, 0xFF, 0x46, 0x86, 0x8F, 0x91, 0xDD, 0x72, 0x0E, 0x4C, 0xDA, 0xD2, 0x1F, 0x2E, 0x09, 0x0D, 0x11, 0xE8, 0xF9, 0xBF, 0xC2, 0xEA, 0x19, 0xEE, 0x1B, 0x5E, 0xAC, 0x85, 0x0B, 0x45, 0x32, 0x96, 0x8A, 0x93, 0x99, 0xF7, 0x6C, 0xD7, 0x79, 0xE7, 0x72, 0x3E, 0x8C, 0x2C, 0xA7, 0x3B, 0x59, 0x7C, 0x0D, 0xF5, 0xF7, 0x3B, 0x94, 0xA3, 0x6F, 0x2B, 0x6C
};

static const guchar TEST_DEVICE_FIRMWARE_HASH[] = {
  0xC3, 0xBF, 0x47, 0xEA, 0x1F, 0x4A, 0x4A, 0x60, 0x54, 0x70, 0x31, 0x3C, 0xAC, 0xB3, 0xA4, 0x4F, 0x4A, 0x46, 0x1F, 0x68, 0xC6, 0xFA, 0xEA, 0xB0, 0x7E, 0x73, 0x76, 0x10, 0xCB, 0x5A, 0xC8, 0x35
};

static const guchar TEST_DEVICE_MODEL_SIGNATURE[] = {
  0xFE, 0xBE, 0x6B, 0xA3, 0x10, 0x78, 0x13, 0xE1, 0x85, 0xF0, 0x51, 0x89, 0xE6, 0x9A, 0xE7, 0x9D, 0x9F, 0x7A, 0x40, 0x80, 0x25, 0x82, 0xD9, 0x43, 0x24, 0x45, 0x98, 0x44, 0xC8, 0xB9, 0x7E, 0xC6, 0xC5, 0xDA, 0xED, 0x54, 0x62, 0x27, 0x6C, 0xB8, 0xA1, 0x93, 0xC3, 0x3E, 0x35, 0x04, 0x24, 0xB0, 0x30, 0x5D, 0x63, 0xD7, 0x9A, 0x93, 0xA9, 0x18, 0x8D, 0xCF, 0xC0, 0xCB, 0x55, 0x95, 0xF6, 0xC1
};

static const guchar TEST_DEVICE_DEVICE_SIGNATURE[] = {
  0x10, 0xCC, 0x57, 0xDD, 0x8D, 0xAF, 0xB4, 0x63, 0x51, 0x0A, 0x73, 0x27, 0xA5, 0xFC, 0xA4, 0x9B, 0x69, 0x8E, 0x99, 0x9B, 0x36, 0x44, 0x8E, 0x20, 0x23, 0xEA, 0xF0, 0xDF, 0xF0, 0xB0, 0xD4, 0xA3, 0x4F, 0x1C, 0xAF, 0x4E, 0x87, 0x2B, 0x77, 0x36, 0x4A, 0x0A, 0x00, 0xD7, 0x47, 0x65, 0x54, 0xD0, 0x32, 0x4C, 0x4C, 0xC9, 0x31, 0x93, 0x7E, 0x23, 0x2A, 0x03, 0x15, 0x83, 0x7D, 0x69, 0x6C, 0x06
};

static const guchar TEST_DEVICE_CONNECT_MAC[] = {
  0xCF, 0x06, 0x75, 0x92, 0x5C, 0x44, 0x49, 0x1D, 0xC6, 0x8A, 0xFD, 0x06, 0xC6, 0xA0, 0xA9, 0x82, 0x76, 0xB6, 0xF8, 0x40, 0x5E, 0x8C, 0x69, 0x7E, 0x4F, 0x5D, 0x4D, 0x93, 0x50, 0x91, 0xD4, 0x8F
};

/* expected derived values based on above */

static const guchar TEST_KEY_AGREEMENT[] = {
  0xC6, 0xC5, 0xB8, 0x58, 0x3E, 0x20, 0x7F, 0x7A, 0xD4, 0x07, 0xE9, 0x20, 0x6D, 0x3F, 0x84, 0xAD, 0xFD, 0xBF, 0x38, 0x64, 0xBF, 0x88, 0xD9, 0x00, 0x4E, 0x0F, 0xE1, 0xCC, 0x26, 0xF8, 0x10, 0x74
};

static const guchar TEST_MASTER_SECRET[] = {
  0xC2, 0x97, 0x45, 0x31, 0x49, 0x17, 0x55, 0x0F, 0x0C, 0x00, 0xF7, 0xDE, 0x9A, 0xEE, 0x24, 0x31, 0x60, 0x1F, 0xBF, 0x87, 0xF0, 0xBE, 0x5F, 0x57, 0x51, 0x19, 0x3E, 0x21, 0x06, 0xD6, 0xD9, 0xA9
};

static const guchar TEST_APPLICATION_SECRET[] = {
  0x13, 0x33, 0x0B, 0xA3, 0x13, 0x5E, 0xCF, 0x5D, 0xC7, 0x1C, 0xED, 0xE0, 0x1A, 0x88, 0x65, 0x40, 0x77, 0x1E, 0xFA, 0xB3, 0x5C, 0x8B, 0xA0, 0x53, 0x90, 0x2B, 0x2C, 0x1E, 0xE7, 0xDE, 0x6E, 0xFE
};

static const guchar TEST_APPLICATION_SYMMETRIC_KEY[] = {
  0x7E, 0xFA, 0x1B, 0xB7, 0xBF, 0xC7, 0x87, 0xBA, 0x1E, 0xF5, 0xFE, 0x36, 0x08, 0xDF, 0xCC, 0xFC, 0x20, 0x81, 0xEE, 0x6B, 0x20, 0x91, 0xB9, 0xF5, 0x20, 0xAB, 0xAA, 0x2E, 0x38, 0x38, 0x37, 0x53
};

/* test verify_reconnect values */

static const guchar TEST_RECONNECT_RANDOM[] = {
  0X8A, 0X74, 0X51, 0XC1, 0XD3, 0XA8, 0XDC, 0XA1, 0XC1, 0X33, 0X0C, 0XA5, 0X0D, 0X73, 0X45, 0X4B, 0X35, 0X1A, 0X49, 0XF4, 0X6C, 0X8E, 0X9D, 0XCE, 0XE1, 0X5C, 0X96, 0X4D, 0X29, 0X5C, 0X31, 0XC9
};

static const guchar TEST_RECONNECT_MAC[] = {
  0XBF, 0X3F, 0X3B, 0XB3, 0XBD, 0X6E, 0XCB, 0X27, 0X84, 0XC1, 0X60, 0XF5, 0X26, 0XF7, 0XBC, 0X3B, 0X3C, 0XA8, 0XFA, 0XF5, 0X55, 0X71, 0X94, 0XC4, 0X8E, 0X00, 0X24, 0XA0, 0X49, 0X39, 0X03, 0XC7
};

/* test verify_authorized_identity values */

static const guchar TEST_IDENTIFY_NONCE[] = {
  0x3A, 0x1B, 0x50, 0x6F, 0x5B, 0xEC, 0x08, 0x90, 0x59, 0xAC, 0xEF, 0xB9, 0xB4, 0x4D, 0xFB, 0xDE, 0xA7, 0xA5, 0x99, 0xEE, 0x9A, 0xA2, 0x67, 0xE5, 0x25, 0x26, 0x64, 0xD6, 0x0B, 0x79, 0x80, 0x53
};

static const guchar TEST_IDENTIFY_ENROLLMENT_ID[] = {
  0xEF, 0x20, 0x55, 0x24, 0x4E, 0x49, 0xC3, 0x9B, 0xEA, 0xBD, 0xAC, 0x49, 0xFD, 0xF4, 0xEE, 0x41, 0x86, 0x05, 0xD1, 0x95, 0xDA, 0x23, 0xB2, 0x02, 0xBA, 0x21, 0x9A, 0x13, 0x83, 0x1A, 0xE6, 0x21
};

static const guchar TEST_IDENTIFY_MAC[] = {
  0XF0, 0XA5, 0XC5, 0XF2, 0X61, 0XC2, 0XFE, 0X93, 0X7D, 0X8B, 0X11, 0X38, 0X57, 0XBC, 0X62, 0X9C, 0XD0, 0X7C, 0XA8, 0X8E, 0XDF, 0X99, 0X1F, 0X69, 0XCA, 0X6F, 0XAE, 0X5C, 0X33, 0X23, 0X90, 0XF6
};

/* test enrollment_id values */

static const guchar TEST_ENROLLMENT_NONCE[] = {
  0xC2, 0x10, 0x1C, 0x44, 0xC9, 0xA6, 0x67, 0xBB, 0xA3, 0x97, 0xE8, 0x1F, 0x48, 0xB1, 0x43, 0x39, 0x86, 0x03, 0xE2, 0xC9, 0x33, 0x5A, 0x68, 0xB4, 0x09, 0xE1, 0xDB, 0xE7, 0x1E, 0x00, 0x5C, 0xA2
};

static const guchar TEST_ENROLLMENT_ENROLLMENT_ID[] = {
  0x67, 0x10, 0x9D, 0xC7, 0x0A, 0x21, 0x63, 0x31, 0xF1, 0x58, 0x0D, 0xDA, 0xC6, 0x01, 0x91, 0x59, 0x29, 0xC1, 0xFF, 0x6C, 0x9B, 0xCB, 0xA6, 0x54, 0x4B, 0xA5, 0x72, 0xC6, 0x60, 0xC3, 0xD9, 0x1E
};


/* test certificate pulled from fprint.freedesktop.org (used with device test data) */
static const guchar TEST_CERT[] = {
  0x30, 0x82, 0x05, 0x07, 0x30, 0x82, 0x03, 0xef, 0xa0, 0x03, 0x02, 0x01,
  0x02, 0x02, 0x12, 0x05, 0x33, 0xc0, 0xe9, 0x31, 0x92, 0xa9, 0x72, 0x31,
  0x9a, 0x0d, 0xbb, 0x61, 0xbf, 0x94, 0x24, 0x08, 0x59, 0x30, 0x0d, 0x06,
  0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00,
  0x30, 0x33, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
  0x02, 0x55, 0x53, 0x31, 0x16, 0x30, 0x14, 0x06, 0x03, 0x55, 0x04, 0x0a,
  0x13, 0x0d, 0x4c, 0x65, 0x74, 0x27, 0x73, 0x20, 0x45, 0x6e, 0x63, 0x72,
  0x79, 0x70, 0x74, 0x31, 0x0c, 0x30, 0x0a, 0x06, 0x03, 0x55, 0x04, 0x03,
  0x13, 0x03, 0x52, 0x31, 0x31, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x35, 0x30,
  0x36, 0x30, 0x32, 0x30, 0x34, 0x33, 0x33, 0x31, 0x33, 0x5a, 0x17, 0x0d,
  0x32, 0x35, 0x30, 0x38, 0x33, 0x31, 0x30, 0x34, 0x33, 0x33, 0x31, 0x32,
  0x5a, 0x30, 0x21, 0x31, 0x1f, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x04, 0x03,
  0x13, 0x16, 0x66, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x66, 0x72, 0x65,
  0x65, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x6f, 0x72, 0x67,
  0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
  0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00,
  0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xdd, 0x1e, 0xfb,
  0xb2, 0x14, 0x49, 0xb7, 0x01, 0xa1, 0x45, 0x36, 0x8e, 0x4a, 0xbe, 0x78,
  0x2a, 0xec, 0x9b, 0x53, 0xfe, 0x9e, 0xed, 0xc3, 0xa9, 0xe2, 0xf5, 0x44,
  0x9f, 0x49, 0x4b, 0x4a, 0xb5, 0x89, 0x36, 0x0c, 0x62, 0xe7, 0x0f, 0xea,
  0x05, 0xec, 0xc1, 0x72, 0x06, 0x52, 0x4e, 0x4d, 0xbc, 0x78, 0x65, 0x8a,
  0x86, 0x46, 0x16, 0x28, 0xea, 0x56, 0x5f, 0x2a, 0x03, 0x85, 0x4e, 0xf4,
  0xd2, 0x9f, 0x24, 0xfa, 0xed, 0x1c, 0xbd, 0xac, 0x5b, 0x45, 0x74, 0x5a,
  0x69, 0x12, 0x6f, 0xd0, 0x29, 0x4c, 0xb4, 0x05, 0x7e, 0xab, 0x2e, 0x46,
  0xe1, 0x6e, 0x31, 0x95, 0xa1, 0x32, 0x9b, 0xdf, 0x1c, 0xd2, 0xa9, 0x03,
  0xba, 0x0f, 0xbd, 0xa9, 0xf4, 0x52, 0xa6, 0x6c, 0xfe, 0x8c, 0xef, 0x39,
  0x75, 0x6b, 0xff, 0x49, 0x8e, 0x3c, 0x7c, 0xb2, 0x83, 0xeb, 0x31, 0xde,
  0x8b, 0x3c, 0xb1, 0x8f, 0x30, 0xa9, 0xe3, 0x60, 0xb8, 0xe6, 0x23, 0xae,
  0xe0, 0x6b, 0xa2, 0x2e, 0xfc, 0x79, 0xa9, 0xdb, 0xc9, 0x63, 0xb5, 0xf7,
  0xa5, 0xa1, 0x01, 0x13, 0x0e, 0x2f, 0xe6, 0x60, 0x47, 0x42, 0xac, 0x0a,
  0xd5, 0x79, 0x1e, 0x63, 0x49, 0x2b, 0xf8, 0x0d, 0x91, 0x0d, 0x67, 0xfd,
  0x74, 0xca, 0x03, 0x93, 0xd0, 0x2b, 0x2e, 0x06, 0x69, 0x7e, 0x7c, 0xc9,
  0x41, 0x6c, 0xfb, 0x83, 0xe6, 0xfc, 0x1e, 0xbd, 0xea, 0x2d, 0x4d, 0x3a,
  0xc9, 0x2b, 0x97, 0x5e, 0x9b, 0x0e, 0x20, 0x7b, 0x89, 0xf8, 0xc7, 0xf4,
  0x75, 0x89, 0x6e, 0x31, 0x56, 0x8c, 0xda, 0x6b, 0x20, 0xff, 0x59, 0xad,
  0x3e, 0x57, 0x62, 0x3f, 0x01, 0xa6, 0x33, 0x8a, 0x4d, 0x6a, 0x27, 0x92,
  0xf9, 0xcc, 0x76, 0xdf, 0x0e, 0xac, 0xab, 0x5c, 0xf4, 0x39, 0xd4, 0x1d,
  0xf2, 0x69, 0x65, 0x90, 0xc3, 0xc8, 0x36, 0x32, 0x2c, 0xf5, 0x45, 0x11,
  0x05, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x82, 0x02, 0x25, 0x30, 0x82,
  0x02, 0x21, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff,
  0x04, 0x04, 0x03, 0x02, 0x05, 0xa0, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d,
  0x25, 0x04, 0x16, 0x30, 0x14, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05,
  0x07, 0x03, 0x01, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x03,
  0x02, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04,
  0x02, 0x30, 0x00, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16,
  0x04, 0x14, 0x3a, 0x83, 0x37, 0x7a, 0x1c, 0xed, 0x45, 0x1c, 0xfc, 0xeb,
  0x9c, 0xa9, 0xec, 0xfc, 0xc8, 0xc7, 0xbf, 0x87, 0xf7, 0x2e, 0x30, 0x1f,
  0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xc5,
  0xcf, 0x46, 0xa4, 0xea, 0xf4, 0xc3, 0xc0, 0x7a, 0x6c, 0x95, 0xc4, 0x2d,
  0xb0, 0x5e, 0x92, 0x2f, 0x26, 0xe3, 0xb9, 0x30, 0x33, 0x06, 0x08, 0x2b,
  0x06, 0x01, 0x05, 0x05, 0x07, 0x01, 0x01, 0x04, 0x27, 0x30, 0x25, 0x30,
  0x23, 0x06, 0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x30, 0x02, 0x86,
  0x17, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x72, 0x31, 0x31, 0x2e,
  0x69, 0x2e, 0x6c, 0x65, 0x6e, 0x63, 0x72, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
  0x30, 0x21, 0x06, 0x03, 0x55, 0x1d, 0x11, 0x04, 0x1a, 0x30, 0x18, 0x82,
  0x16, 0x66, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x66, 0x72, 0x65, 0x65,
  0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x6f, 0x72, 0x67, 0x30,
  0x13, 0x06, 0x03, 0x55, 0x1d, 0x20, 0x04, 0x0c, 0x30, 0x0a, 0x30, 0x08,
  0x06, 0x06, 0x67, 0x81, 0x0c, 0x01, 0x02, 0x01, 0x30, 0x2e, 0x06, 0x03,
  0x55, 0x1d, 0x1f, 0x04, 0x27, 0x30, 0x25, 0x30, 0x23, 0xa0, 0x21, 0xa0,
  0x1f, 0x86, 0x1d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x72, 0x31,
  0x31, 0x2e, 0x63, 0x2e, 0x6c, 0x65, 0x6e, 0x63, 0x72, 0x2e, 0x6f, 0x72,
  0x67, 0x2f, 0x39, 0x30, 0x2e, 0x63, 0x72, 0x6c, 0x30, 0x82, 0x01, 0x03,
  0x06, 0x0a, 0x2b, 0x06, 0x01, 0x04, 0x01, 0xd6, 0x79, 0x02, 0x04, 0x02,
  0x04, 0x81, 0xf4, 0x04, 0x81, 0xf1, 0x00, 0xef, 0x00, 0x76, 0x00, 0xa4,
  0x42, 0xc5, 0x06, 0x49, 0x60, 0x61, 0x54, 0x8f, 0x0f, 0xd4, 0xea, 0x9c,
  0xfb, 0x7a, 0x2d, 0x26, 0x45, 0x4d, 0x87, 0xa9, 0x7f, 0x2f, 0xdf, 0x45,
  0x59, 0xf6, 0x27, 0x4f, 0x3a, 0x84, 0x54, 0x00, 0x00, 0x01, 0x97, 0x2f,
  0x1f, 0xd0, 0xa5, 0x00, 0x00, 0x04, 0x03, 0x00, 0x47, 0x30, 0x45, 0x02,
  0x20, 0x52, 0xd0, 0xc9, 0x2b, 0xef, 0xbe, 0x64, 0xe8, 0x6e, 0x26, 0x70,
  0xeb, 0x53, 0xbb, 0x79, 0xa5, 0xb9, 0x81, 0xfb, 0xb6, 0x02, 0xa0, 0x2d,
  0xc6, 0x87, 0xfd, 0xed, 0xf0, 0xf9, 0xf3, 0xcd, 0x11, 0x02, 0x21, 0x00,
  0xcd, 0x9a, 0x3e, 0x1a, 0x77, 0x2a, 0xe6, 0xa3, 0xf2, 0xa0, 0x4b, 0xcf,
  0x1b, 0x7a, 0xba, 0x4f, 0xe7, 0x2b, 0xc7, 0x4b, 0x60, 0xf4, 0xd3, 0x6a,
  0xfa, 0x6b, 0x55, 0x87, 0x2a, 0xaa, 0x7c, 0xa9, 0x00, 0x75, 0x00, 0x12,
  0xf1, 0x4e, 0x34, 0xbd, 0x53, 0x72, 0x4c, 0x84, 0x06, 0x19, 0xc3, 0x8f,
  0x3f, 0x7a, 0x13, 0xf8, 0xe7, 0xb5, 0x62, 0x87, 0x88, 0x9c, 0x6d, 0x30,
  0x05, 0x84, 0xeb, 0xe5, 0x86, 0x26, 0x3a, 0x00, 0x00, 0x01, 0x97, 0x2f,
  0x1f, 0xe0, 0x39, 0x00, 0x00, 0x04, 0x03, 0x00, 0x46, 0x30, 0x44, 0x02,
  0x20, 0x6f, 0xef, 0x97, 0xe9, 0x96, 0x88, 0xf9, 0x1e, 0x3c, 0x6c, 0xe6,
  0x7a, 0xe5, 0xfb, 0x14, 0x80, 0xa1, 0x0e, 0x31, 0x8d, 0x2a, 0x6c, 0x1f,
  0x46, 0xa6, 0x8c, 0x4a, 0xfa, 0x08, 0x3d, 0x62, 0xd0, 0x02, 0x20, 0x27,
  0x3c, 0x89, 0x9a, 0xcc, 0x88, 0x54, 0x3d, 0xfe, 0x48, 0xc7, 0x76, 0xf3,
  0x1c, 0xf9, 0x52, 0xd2, 0xd2, 0xdd, 0x7d, 0xca, 0x43, 0x5a, 0x1a, 0x7f,
  0x16, 0xee, 0xc6, 0xcf, 0x9c, 0x84, 0x40, 0x30, 0x0d, 0x06, 0x09, 0x2a,
  0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00, 0x03, 0x82,
  0x01, 0x01, 0x00, 0x79, 0x49, 0x17, 0x6a, 0x30, 0xa8, 0xca, 0xb4, 0x9b,
  0x57, 0xbc, 0x21, 0xb8, 0xaf, 0x40, 0x85, 0x6a, 0x2f, 0x1b, 0xbe, 0xc3,
  0x32, 0x89, 0x86, 0x21, 0x90, 0x94, 0xf0, 0x44, 0xa4, 0xa9, 0x9c, 0x84,
  0x4f, 0xf0, 0x54, 0x71, 0x3b, 0xca, 0x0a, 0xcc, 0x75, 0xe6, 0xf1, 0xf3,
  0x77, 0x10, 0x1d, 0x64, 0xfb, 0xee, 0xb4, 0x3c, 0xc4, 0xf8, 0xe6, 0xec,
  0x68, 0xd7, 0xc2, 0xe7, 0x43, 0xae, 0xdc, 0x4d, 0x0b, 0x58, 0x0f, 0x87,
  0x36, 0xa0, 0x78, 0xe9, 0x9d, 0xb1, 0x64, 0x95, 0x35, 0xb1, 0x3f, 0x42,
  0x60, 0xfc, 0xda, 0xe1, 0x09, 0xe1, 0xfc, 0xad, 0x63, 0xb5, 0x43, 0x4b,
  0x03, 0x73, 0xfe, 0xc9, 0x2c, 0x5f, 0xac, 0x31, 0x2c, 0x9b, 0x98, 0x35,
  0xae, 0xa6, 0xd2, 0x09, 0xbd, 0x79, 0xf6, 0x6f, 0x2b, 0x79, 0x57, 0x11,
  0xdd, 0xf4, 0x77, 0xf5, 0xab, 0x8f, 0xe6, 0x80, 0x2f, 0x27, 0x76, 0x80,
  0xaa, 0xe5, 0xf4, 0x89, 0x6d, 0x7f, 0x78, 0x02, 0xa5, 0xd7, 0xdc, 0x36,
  0x04, 0x65, 0x25, 0x5c, 0xd0, 0xfd, 0x48, 0x18, 0x22, 0x9c, 0xbc, 0x5f,
  0x75, 0x5c, 0x41, 0xd9, 0xcf, 0x42, 0x67, 0xf4, 0x60, 0xc6, 0x21, 0x67,
  0x59, 0x47, 0xa9, 0x3b, 0x62, 0x38, 0x02, 0x98, 0xf9, 0xf2, 0xa9, 0x92,
  0xda, 0x9d, 0x3f, 0x73, 0x56, 0x33, 0xa9, 0x47, 0xa6, 0xab, 0x1c, 0x1e,
  0x4c, 0x75, 0x66, 0xd9, 0xd3, 0x3d, 0x88, 0x9a, 0x6d, 0x38, 0x94, 0x08,
  0xd8, 0x98, 0xad, 0x2c, 0x9f, 0x8c, 0x08, 0xf3, 0xdf, 0xc8, 0x47, 0xcc,
  0xdf, 0x50, 0x70, 0x8e, 0x2d, 0xca, 0x0f, 0x5e, 0x0f, 0x08, 0x6f, 0x9d,
  0x80, 0xe6, 0xa5, 0x61, 0x3f, 0xa7, 0xdb, 0xa5, 0x2c, 0x5e, 0xdf, 0xe2,
  0x6a, 0x6b, 0xd7, 0x20, 0xbd, 0xf9, 0x92, 0x95, 0x2b, 0xd7, 0xd7, 0x72,
  0xd7, 0x7f, 0x45, 0x63, 0x39, 0xe1, 0x80
};
